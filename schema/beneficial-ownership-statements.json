{
  "id":"beneficial-ownership-statements.json",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "statementGroups": {
      "title": "Statement group",
      "description": "A statement group is used to collect together statements relating to a particular disclosure.",
      "type": "array",
      "items": {
          "title": "Statement group",
          "type": "object",
          "properties": {
            "statements": {
              "title": "Beneficial ownership statements",
              "description": "A collection of statements that describe the relationship between legal entities or between legal entities and natural persons, or that explain the non-availability of this information.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/BeneficialOwnershipStatement"
              }
            }
          }
        
      }
    }
  },
  "definitions": {
    "BeneficialOwnershipStatement": {
      "title": "Beneficial Ownership Statement",
      "description": "ToDo",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "date": {
          "$ref": "#/definitions/StatementDate"
        },
        "entity": {
          "oneOf": [
            {
              "$ref": "#/definitions/EntityStatement"
            },
            {
              "$ref": "#/definitions/StatementReference"
            }
          ]
        },
        "interestedParty": {
          "oneOf": [
            {
              "$ref": "#/definitions/EntityStatement"
            },
            {
              "$ref": "#/definitions/PersonStatement"
            },
            {
              "$ref": "#/definitions/StatementReference"
            }
          ]
        },
        "interests": {
          "title": "Interests",
          "description": "A description of the interests held by the interestedParty covered by this statement in the entity covered by this statement.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Interest"
          }
        },
        "qualifications": {
          "title": "Qualifications",
          "description": "A qualification statement can be used to record any additional information about this Beneficial Ownership Statement, including information about any reasons non-disclosure of information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QualificationStatement"
          }
        },
        "provenance": {
          "oneOf": [
            {
              "$ref": "#/definitions/ProvenanceStatement"
            },
            {
              "$ref": "#/definitions/StatementReference"
            }
          ]
        }
      }
    },
    "StatementReference": {
      "title": "Statement reference",
      "description": "Where entity, person and provenance statements are not nested within the beneficial ownership statement, they may be cross-referenced using a Statement Reference.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "What type of statement is being referred to?",
          "type": "string",
          "enum": [
            "entityStatement",
            "personStatement",
            "provenanceStatement"
          ]
        },
        "id": {
          "title": "ID",
          "description": "The identifier of the statement being referenced.",
          "type": "string"
        },
        "uri": {
          "title": "URI",
          "description": "A persistent URI for the statement being referenced.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "EntityStatement": {
      "title": "Entity statement",
      "description": "A statement identifying and describing the entity that is the subject of the ownership or control described in a beneficial ownership statement.",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "type": {
          "title": "Type",
          "description": "What kind of entity is this? The 'registeredEntity' code covers any legal entity created through an act of official registration, usually resulting in an identifier being assigned to the entity. The 'arrangement' code covers artificial entities, described in the data model for the purpose of associating one or more natural or legal persons together in an ownership or control relationship.",
          "type": "string",
          "enum": [
            "registeredEntity",
            "arrangement"
          ]
        },
        "date": {
          "$ref": "#/definitions/StatementDate"
        },
        "name": {
          "title": "Name",
          "description": "The declared name of this entity.",
          "type": "string"
        },
        "jurisdiction": {
          "title": "Jurisdiction",
          "description": "The jurisdiction in which this entity is registered, expressed using an ISO ISO_3166-2 2-Digit country code, or ISO_3166-2 sub-division code, where the sub-division in question (e.g. a sub-national state or region) has relevant jurisdiction over the registration of operation of this entity.",
          "type": "string",
          "minLength": 2,
          "maxLength": 10
        },
        "identifiers": {
          "title": "Identifiers",
          "description": "One or more official identifiers for this entity. Where available, official registration numbers should be provided.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "createdDate": {
          "title": "Created date",
          "description": "When was this entity first created or registered. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        },
        "endDate": {
          "title": "End date",
          "description": "If this entity is no longer active, provide the date on which it ceased. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        },
        "addresses": {
          "title": "Addresses",
          "description": "One or more addresses for this entity.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "uri": {
          "title": "URI",
          "description": "Where a [persisten URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) is available for this entity this should be included.",
          "type": "string",
          "format": "uri"
        },
        "provenance": {
          "oneOf": [
            {
              "$ref": "#/definitions/ProvenanceStatement"
            },
            {
              "$ref": "#/definitions/StatementReference"
            }
          ]
        }
      }
    },
    "PersonStatement": {
      "title": "Person statement",
      "description": "A person statement describes the information known about a natural person at a particular point in time, or from a given submission of information",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "type": {
          "title": "Type",
          "description": "The ultimate beneficial owner of a legal entity is always a natural person.",
          "type": "string",
          "enum": [
            "naturalPerson"
          ]
        },
        "date": {
          "$ref": "#/definitions/StatementDate"
        },
        "name": {
          "title": "Name",
          "description": "The full name of this person.",
          "type": "string"
        },
        "alternateNames": {
          "title": "Alternate names",
          "description": "Other known names for this individual.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlternateName"
          }
        },
        "identifiers": {
          "title": "Identifiers",
          "description": "One or more official identifiers for this perrson. Where available, official registration numbers should be provided.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "nationalities": {
          "title": "Nationality",
          "description": "An array of ISO 2-Digit country codes representing nationalities held by this individual.",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 2,
            "minLength": 2
          }
        },
        "placeOfResidence": {
          "$ref": "#/definitions/Address"
        },
        "placeOfBirth": {
          "$ref": "#/definitions/Address"
        },
        "birthDate": {
          "title": "Created date",
          "description": "The date of birth for this individual. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        },
        "deathDate": {
          "title": "End date",
          "description": "If this individual is no longer alive, provide their date of death. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        },
        "addresses": {
          "title": "Addresses",
          "description": "One or more addresses for this entity.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "provenance": {
          "oneOf": [
            {
              "$ref": "#/definitions/ProvenanceStatement"
            },
            {
              "$ref": "#/definitions/StatementReference"
            }
          ]
        }
      }
    },
    "ProvenanceStatement": {
      "title": "Provenance statement",
      "description": "A provenance statement records information on the agent responsible for making a given statement, and provides a description of any original source documents from which information was derived.",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "type:": {
          "title": "Source type",
          "description": "What kind of source is this? [ToDo: Identify an appropriate codelist for this field]",
          "type": "string",
          "enum": [
            "official-records",
            "unverified-submission",
            "verified-submission"
          ]
        },
        "attributedTo": {
          "title": "Attributed to",
          "description": "Which agent (individual, organisation or software process) was responsible for directly contributing this source.",
          "type": "object",
          "properties": {
            "type": {
              "title": "Type",
              "description": "What type of agent is this?",
              "type": "string",
              "enum": [
                "Person",
                "Organization",
                "SoftwareAgent"
              ]
            },
            "name": {
              "title": "Name",
              "description": "The name of this agent",
              "type": "string"
            },
            "identifier": {
              "$ref": "#/definitions/Identifier"
            }
          }
        },
        "generatedBy": {
          "title": "Generated by",
          "description": "Which activity led to the creation of this source?",
          "type": "object",
          "properties": {
            "type": {
              "title": "Type",
              "description": "What type of activity was this?",
              "type": "string",
              "enum": [
                "user-submission",
                "third-party-submission"
              ]
            },
            "description": {
              "title": "Description",
              "description": "A description of this activity",
              "type": "string"
            }
          }
        },
        "primarySource": {
          "title": "Primary source",
          "description": "A link to a primary source. This may be a resolvable URI, or some other identifier for the source.",
          "type": "string",
          "format": "uri"
        },
        "derivedFrom": {
          "title": "Derived from",
          "description": "If this source was derived from a prior source either provide the identifier of a provenanceStatement about that prior source, or nest the provenace statement here.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProvenanceStatement"
            },
            {
              "$ref": "#/definitions/StatementReference"
            }
          ]
        }
      }
    },
    "QualificationStatement": {
      "properties": {
        "id": {
          "$ref": "#/definitions/ID"
        },
        "date": {
          "$ref": "#/definitions/StatementDate"
        },
        "type": {
          "title": "Type of qualification statement",
          "description": "",
          "type": "string",
          "enum": [
            "non-disclosure",
            "redaction",
            "restrictions-on-control"
          ]
        },
        "description": {
          "title": "Description",
          "description": "A description of this qualification",
          "type": "string"
        },
        "provenance": {
          "oneOf": [
            {
              "$ref": "#/definitions/ProvenanceStatement"
            },
            {
              "$ref": "#/definitions/StatementReference"
            }
          ]
        }
      }
    },
    "Identifier": {
      "title": "Identifier",
      "description": "An identifier that has been assigned to this entity. The scheme or list from which the identifier is drawn should be declared. ",
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "The identifier for this entity as provided in the declared scheme.",
          "type": "string"
        },
        "scheme": {
          "title": "Scheme",
          "description": "For entity statements, the scheme should be a entry from the [org-id.guide](http://www.org-id.guide) codelist. For person statements, recognised values include 'passport', 'internal' and 'id-card'.",
          "type": "string"
        },
        "uri": {
          "title": "URI",
          "description": "Where this identifier has a [canonical URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier) this may be included",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "ID": {
      "title": "ID",
      "description": "A persistent globally unique identifier for this statement.",
      "type": "string"
    },
    "StatementDate": {
      "title": "Statement date",
      "description": "The date on which this statement was made",
      "type": "string",
      "format": "date"
    },
    "Address": {
      "title": "Address",
      "description": "A free text address string, providing as much address data as is relevant, suitable for processing using address parsing algorithms. For some uses (for example, Place of Birth) only a town and country are required.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "What type of address is this?",
          "type": "string",
          "enum": [
            "placeOfBirth",
            "home",
            "residence",
            "registered",
            "service",
            "alternative"
          ]
        },
        "address": {
          "title": "Address",
          "description": "The address, with each line or component of the address separated by a line-break or comma. This field may also include the postalcode.",
          "type": "string"
        },
        "postalcode": {
          "title": "Postcode",
          "description": "The postal code for this address.",
          "type": "string"
        },
        "country": {
          "title": "Country",
          "description": "The ISO 2-Digit county code for this address.",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        }
      }
    },
    "AlternateName": {
      "title": "Alternative name",
      "description": "An alternative known name for this individual. Names should be provided in fullName, and may optionally be broken down in the familyName, givenName and patronymicName fields, based on the EC ISA Core Person Vocabulary definitions.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "description": "What kind of alternative name is this? Select from 'translation', 'formerName','birth', and 'alias'.",
          "type": "string",
          "enum": [
            "translation",
            "former",
            "alias",
            "birth"
          ]
        },
        "fullName": {
          "title": "Full name",
          "description": "The full name contains the complete name of a person as one string.",
          "type": "string"
        },
        "familyName": {
          "title": "",
          "description": "A family name is usually shared by members of a family. This attribute also carries prefixes or suffixes which are part of the Family Name, e.g. 'de Boer', 'van de Putte', 'von und zu Orlow'. Multiple family names, such as are commonly found in Hispanic countries, are recorded in the single Family Name field so that, for example, Miguel de Cervantes Saavedra's Family Name would be recorded as 'Cervantes Saavedra.'",
          "type": "string"
        },
        "givenName": {
          "title": "Given names",
          "description": "A given name, or multiple given names, are the denominator(s) that identify an individual within a family. These are given to a person by his or her parents at birth or may be legally recognised as 'given names' through a formal process. All given names are ordered in one field so that, for example, the given name for Johan Sebastian Bach is 'Johan Sebastian.'",
          "type": "string"
        },
        "patronymicName": {
          "title": "Patronymic Name",
          "description": "Patronymic names are important in some countries. Iceland does not have a concept of family name in the way that many other European countries do, for example. In Bulgaria and Russia, patronymic names are in every day usage, for example, the 'Sergeyevich' in 'Mikhail Sergeyevich Gorbachev'",
          "type": "string"
        }
      }
    },
    "Interest": {
      "title": "Interest",
      "description": "A description of the interest held by an interestedParty in another entity.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type of interest",
          "description": "A codelist value indicating the nature of the interest.",
          "type": "string",
          "enum": [
            "direct-shareholding",
            "direct-voting-rights",
            "direct-appointment-of-board",
            "direct-influence",
            "indirect-shareholding",
            "indirect-voting-rights",
            "indirect-appointment-of-board",
            "indirect-influence"
          ]
        },
        "details": {
          "title": "Details",
          "description": "This field may be used to provide the local name given to this kind of interest, or any further semi-structured or unstructured information to clarify the nature of the interest held.",
          "type": "string"
        },
        "share": {
          "title": "Percentage share",
          "description": "Where an exact percentage is available, this should be given, and maximum and minimum values set to the same as the exact percentage. Otherwise, maximum and minimum can be used to record the range into which the share of this kind of interest falls.",
          "type": "object",
          "properties": {
            "exact": {
              "title": "Exact share",
              "description": "The exact share of this interest held (where available).",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "maximum": {
              "title": "Maximum share",
              "description": "The upper bound of the share of this interest known to be held.",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "minimum": {
              "title": "Minimum share",
              "description": "The lower bound of the share of this interest known to be held.",
              "type": "number",
              "maximum": 100,
              "minimum": 0
            },
            "exclusiveMinimum": {
              "title": "Exclusive minimum",
              "description": "If exclusiveMinimum is true, then the share is at least greater than the minimum value given. E.g. if minimum is 25, the share is at least 25.1, and not simple 25.",
              "type": "boolean",
              "default": false
            }
          }
        },
        "startDate": {
          "title": "State date",
          "description": "When did this interest first occur. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        },
        "endDate": {
          "title": "End date",
          "description": "When did this interest cease. Please provide as precise a date as possible in ISO 8601 format. When only the year or year and month is known, these can be given as YYYY or YYYY-MM.",
          "type": "string",
          "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
        }
      }
    }
  }
}